// tsconfig.json
{
    "compilerOptions": {
      /* Basic Options */
      "target": "ES2020", // Target modern ECMAScript version compatible with Node >= 18
      "module": "CommonJS", // Use CommonJS modules (standard for Node.js)
      "lib": ["ES2020"], // Standard libraries available (matches target)
      "outDir": "./dist", // Output directory for compiled JS
      "rootDir": "./src", // Root directory of source TS files
  
      /* Strict Type-Checking Options */
      "strict": true, // Enable all strict type-checking options (recommended)
      // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
      // "strictNullChecks": true,              /* Enable strict null checks. */
      // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
      // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
      // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
      // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
      // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */
  
      /* Module Resolution Options */
      "moduleResolution": "node", // How modules get resolved (standard for Node)
      "baseUrl": ".", // Base directory for non-relative module imports (optional)
      "paths": { // Optional: Define path mappings (e.g., "@/*": ["src/*"])
        "@/*": ["src/*"]
      },
      "resolveJsonModule": true, // Allow importing JSON files
      "esModuleInterop": true, // Enables compatibility with CommonJS modules with default exports
      // "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
  
      /* Advanced Options */
      "skipLibCheck": true, // Skip type checking of declaration files (*.d.ts) - speeds up compilation
      "forceConsistentCasingInFileNames": true, // Disallow inconsistently-cased references to the same file.
  
      /* Source Map Options */
      "sourceMap": true, // Generate corresponding '.map' files for debugging
      "declaration": true, // Generate corresponding '.d.ts' files (needed for 'types' in package.json)
      // "declarationMap": true,                  /* Generates a sourcemap for each corresponding '.d.ts' file. */
  
      /* Experimental Options */
      // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
      // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  
      /* Other Options */
      "removeComments": false // Keep comments in JS output (can be true for production builds)
    },
    "include": [
      "src/**/*" // Include all files within the src directory
    ],
    "exclude": [
      "node_modules", // Exclude dependencies
      "dist", // Exclude compiled output
      "test", // Exclude tests (can configure separately if needed)
      "example-site" // Exclude the example site
    ]
  }